--DB backup & restore

---- Backup
Format : Custom
Encoding:  UTF8
Role name: postgres

--Normal Query
select * from notice;
select notice_content from notice where notice_nr = ;

--Create Table
create table payment (
	paymentid serial primary key,
	memberid VARCHAR(50) NOT NULL,
	orderid VARCHAR(50) NOT NULL,
	payment_date timestamp, 
	payment_ownername VARCHAR(50),
	payment_art integer,
	payment_deposit numeric
);

-- Add Column
ALTER TABLE payment
ADD COLUMN payment_state integer;

-- Insert data
INSERT INTO payment (memberid, orderid, payment_deposit) VALUES ('m', '20190526220452', 42000);

-- Update table
UPDATE payment SET payment_ownername = null, payment_state = 1 WHERE orderid='20190526220452' and memberid='m' ;

-- Drop table column
ALTER TABLE "table_name" DROP COLUMN "column_name";

-- Delete table rows
DELETE FROM table WHERE ;

getProductsCommonInfo : SELECT prod.pd_shopurl, prod.pd_trackingtitle, prod.pd_trackingnumber, oState.ship_state, oState.ship_price, 
                        oState.box_actual_weight, oState.box_volume_weight, oState.ship_price_discount
                        FROM ((PRODUCT prod INNER JOIN ORDERSTATE oState ON prod.orderid = oState.orderid and prod.memberid="m" and prod.orderid="20190526220452") 
                        INNER JOIN PAYMENT paymt ON oState.fk_payment = paymt.paymentid and oState.orderid = "20190526220452"
                        
willPayDeliveryFee : WITH t AS ( UPDATE PAYMENT SET payment_ownername = ?, payment_state = ? WHERE memberid = ? AND orderid = ?) 
                     UPDATE orderstate SET ship_state = ? WHERE memberid = ? AND orderid = ?